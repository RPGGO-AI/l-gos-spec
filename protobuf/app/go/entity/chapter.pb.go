// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.25.2
// source: chapter.proto

package entity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chapter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChapterId     string                 `protobuf:"bytes,1,opt,name=chapter_id,proto3" json:"chapter_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverUrl      string                 `protobuf:"bytes,3,opt,name=cover_url,proto3" json:"cover_url,omitempty"`
	Background    string                 `protobuf:"bytes,4,opt,name=background,proto3" json:"background,omitempty"`
	Intro         string                 `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	InitDialogue  []*Dialogue            `protobuf:"bytes,6,rep,name=init_dialogue,proto3" json:"init_dialogue,omitempty"`
	LoreList      []*Lore                `protobuf:"bytes,7,rep,name=lore_list,proto3" json:"lore_list,omitempty"`
	CharacterInfo []*CharacterInfo       `protobuf:"bytes,8,rep,name=character_info,proto3" json:"character_info,omitempty"`
	GoalInfo      *GoalInfo              `protobuf:"bytes,9,opt,name=goal_info,proto3" json:"goal_info,omitempty"`
	Statuses      []*Status              `protobuf:"bytes,10,rep,name=statuses,proto3" json:"statuses,omitempty"`
	Endings       string                 `protobuf:"bytes,11,opt,name=endings,proto3" json:"endings,omitempty"`
	Characters    []*Character           `protobuf:"bytes,12,rep,name=characters,proto3" json:"characters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	mi := &file_chapter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{0}
}

func (x *Chapter) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *Chapter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chapter) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Chapter) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *Chapter) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *Chapter) GetInitDialogue() []*Dialogue {
	if x != nil {
		return x.InitDialogue
	}
	return nil
}

func (x *Chapter) GetLoreList() []*Lore {
	if x != nil {
		return x.LoreList
	}
	return nil
}

func (x *Chapter) GetCharacterInfo() []*CharacterInfo {
	if x != nil {
		return x.CharacterInfo
	}
	return nil
}

func (x *Chapter) GetGoalInfo() *GoalInfo {
	if x != nil {
		return x.GoalInfo
	}
	return nil
}

func (x *Chapter) GetStatuses() []*Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *Chapter) GetEndings() string {
	if x != nil {
		return x.Endings
	}
	return ""
}

func (x *Chapter) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

type Status struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AffiliationId   string                 `protobuf:"bytes,3,opt,name=affiliation_id,proto3" json:"affiliation_id,omitempty"`
	AffiliationType string                 `protobuf:"bytes,4,opt,name=affiliation_type,proto3" json:"affiliation_type,omitempty"`
	Value           int32                  `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_chapter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Status) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Status) GetAffiliationId() string {
	if x != nil {
		return x.AffiliationId
	}
	return ""
}

func (x *Status) GetAffiliationType() string {
	if x != nil {
		return x.AffiliationType
	}
	return ""
}

func (x *Status) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Goal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StatusConfs   []*StatusConf          `protobuf:"bytes,3,rep,name=status_confs,proto3" json:"status_confs,omitempty"`
	Subgoals      []*Goal                `protobuf:"bytes,4,rep,name=subgoals,proto3" json:"subgoals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Goal) Reset() {
	*x = Goal{}
	mi := &file_chapter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Goal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal) ProtoMessage() {}

func (x *Goal) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal.ProtoReflect.Descriptor instead.
func (*Goal) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{2}
}

func (x *Goal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Goal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Goal) GetStatusConfs() []*StatusConf {
	if x != nil {
		return x.StatusConfs
	}
	return nil
}

func (x *Goal) GetSubgoals() []*Goal {
	if x != nil {
		return x.Subgoals
	}
	return nil
}

type StatusConf struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StatusId        string                 `protobuf:"bytes,1,opt,name=status_id,proto3" json:"status_id,omitempty"`
	StatusThreshold int32                  `protobuf:"varint,2,opt,name=status_threshold,proto3" json:"status_threshold,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StatusConf) Reset() {
	*x = StatusConf{}
	mi := &file_chapter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusConf) ProtoMessage() {}

func (x *StatusConf) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusConf.ProtoReflect.Descriptor instead.
func (*StatusConf) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{3}
}

func (x *StatusConf) GetStatusId() string {
	if x != nil {
		return x.StatusId
	}
	return ""
}

func (x *StatusConf) GetStatusThreshold() int32 {
	if x != nil {
		return x.StatusThreshold
	}
	return 0
}

type GoalSetting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoGoal        bool                   `protobuf:"varint,1,opt,name=no_goal,proto3" json:"no_goal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoalSetting) Reset() {
	*x = GoalSetting{}
	mi := &file_chapter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoalSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoalSetting) ProtoMessage() {}

func (x *GoalSetting) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoalSetting.ProtoReflect.Descriptor instead.
func (*GoalSetting) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{4}
}

func (x *GoalSetting) GetNoGoal() bool {
	if x != nil {
		return x.NoGoal
	}
	return false
}

type GoalInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuccessGoal   *Goal                  `protobuf:"bytes,1,opt,name=success_goal,proto3" json:"success_goal,omitempty"`
	FailGoal      *Goal                  `protobuf:"bytes,2,opt,name=fail_goal,proto3" json:"fail_goal,omitempty"`
	GoalSetting   *GoalSetting           `protobuf:"bytes,3,opt,name=goal_setting,proto3" json:"goal_setting,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoalInfo) Reset() {
	*x = GoalInfo{}
	mi := &file_chapter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoalInfo) ProtoMessage() {}

func (x *GoalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoalInfo.ProtoReflect.Descriptor instead.
func (*GoalInfo) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{5}
}

func (x *GoalInfo) GetSuccessGoal() *Goal {
	if x != nil {
		return x.SuccessGoal
	}
	return nil
}

func (x *GoalInfo) GetFailGoal() *Goal {
	if x != nil {
		return x.FailGoal
	}
	return nil
}

func (x *GoalInfo) GetGoalSetting() *GoalSetting {
	if x != nil {
		return x.GoalSetting
	}
	return nil
}

type Dialogue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CharacterId   string                 `protobuf:"bytes,4,opt,name=character_id,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dialogue) Reset() {
	*x = Dialogue{}
	mi := &file_chapter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dialogue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialogue) ProtoMessage() {}

func (x *Dialogue) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialogue.ProtoReflect.Descriptor instead.
func (*Dialogue) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{6}
}

func (x *Dialogue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dialogue) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Dialogue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Dialogue) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

type Lore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       string                 `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	CharacterId   []string               `protobuf:"bytes,2,rep,name=character_id,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lore) Reset() {
	*x = Lore{}
	mi := &file_chapter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lore) ProtoMessage() {}

func (x *Lore) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lore.ProtoReflect.Descriptor instead.
func (*Lore) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{7}
}

func (x *Lore) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Lore) GetCharacterId() []string {
	if x != nil {
		return x.CharacterId
	}
	return nil
}

type CharacterInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Emotion         string                 `protobuf:"bytes,1,opt,name=emotion,proto3" json:"emotion,omitempty"`
	CharacterId     string                 `protobuf:"bytes,2,opt,name=character_id,proto3" json:"character_id,omitempty"`
	RecentOngoing   string                 `protobuf:"bytes,3,opt,name=recent_ongoing,proto3" json:"recent_ongoing,omitempty"`
	PersonalSetting string                 `protobuf:"bytes,4,opt,name=personal_setting,proto3" json:"personal_setting,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CharacterInfo) Reset() {
	*x = CharacterInfo{}
	mi := &file_chapter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterInfo) ProtoMessage() {}

func (x *CharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chapter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterInfo.ProtoReflect.Descriptor instead.
func (*CharacterInfo) Descriptor() ([]byte, []int) {
	return file_chapter_proto_rawDescGZIP(), []int{8}
}

func (x *CharacterInfo) GetEmotion() string {
	if x != nil {
		return x.Emotion
	}
	return ""
}

func (x *CharacterInfo) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *CharacterInfo) GetRecentOngoing() string {
	if x != nil {
		return x.RecentOngoing
	}
	return ""
}

func (x *CharacterInfo) GetPersonalSetting() string {
	if x != nil {
		return x.PersonalSetting
	}
	return ""
}

var File_chapter_proto protoreflect.FileDescriptor

var file_chapter_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x1a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x03, 0x0a, 0x07, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x37, 0x0a,
	0x0d, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x66, 0x66, 0x69,
	0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x04, 0x47,
	0x6f, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x12, 0x29,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x22, 0x56, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x22, 0x27, 0x0a, 0x0b, 0x47, 0x6f, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6e, 0x6f, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x47,
	0x6f, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x0c, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x66, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x09, 0x66, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0c, 0x67, 0x6f, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x0c, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x22, 0x72, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x04, 0x4c, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x0d,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_chapter_proto_rawDescOnce sync.Once
	file_chapter_proto_rawDescData []byte
)

func file_chapter_proto_rawDescGZIP() []byte {
	file_chapter_proto_rawDescOnce.Do(func() {
		file_chapter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chapter_proto_rawDesc), len(file_chapter_proto_rawDesc)))
	})
	return file_chapter_proto_rawDescData
}

var file_chapter_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chapter_proto_goTypes = []any{
	(*Chapter)(nil),       // 0: chapter.Chapter
	(*Status)(nil),        // 1: chapter.Status
	(*Goal)(nil),          // 2: chapter.Goal
	(*StatusConf)(nil),    // 3: chapter.StatusConf
	(*GoalSetting)(nil),   // 4: chapter.GoalSetting
	(*GoalInfo)(nil),      // 5: chapter.GoalInfo
	(*Dialogue)(nil),      // 6: chapter.Dialogue
	(*Lore)(nil),          // 7: chapter.Lore
	(*CharacterInfo)(nil), // 8: chapter.CharacterInfo
	(*Character)(nil),     // 9: character.Character
}
var file_chapter_proto_depIdxs = []int32{
	6,  // 0: chapter.Chapter.init_dialogue:type_name -> chapter.Dialogue
	7,  // 1: chapter.Chapter.lore_list:type_name -> chapter.Lore
	8,  // 2: chapter.Chapter.character_info:type_name -> chapter.CharacterInfo
	5,  // 3: chapter.Chapter.goal_info:type_name -> chapter.GoalInfo
	1,  // 4: chapter.Chapter.statuses:type_name -> chapter.Status
	9,  // 5: chapter.Chapter.characters:type_name -> character.Character
	3,  // 6: chapter.Goal.status_confs:type_name -> chapter.StatusConf
	2,  // 7: chapter.Goal.subgoals:type_name -> chapter.Goal
	2,  // 8: chapter.GoalInfo.success_goal:type_name -> chapter.Goal
	2,  // 9: chapter.GoalInfo.fail_goal:type_name -> chapter.Goal
	4,  // 10: chapter.GoalInfo.goal_setting:type_name -> chapter.GoalSetting
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_chapter_proto_init() }
func file_chapter_proto_init() {
	if File_chapter_proto != nil {
		return
	}
	file_character_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chapter_proto_rawDesc), len(file_chapter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chapter_proto_goTypes,
		DependencyIndexes: file_chapter_proto_depIdxs,
		MessageInfos:      file_chapter_proto_msgTypes,
	}.Build()
	File_chapter_proto = out.File
	file_chapter_proto_goTypes = nil
	file_chapter_proto_depIdxs = nil
}
